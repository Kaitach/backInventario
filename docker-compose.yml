version: '3.14'
services:
  rabbitmq-inventory:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'list_queues']
      interval: 5s
      timeout: 10s
      retries: 5
  mysql-inventory:
    image: mysql
    ports:
      - 3307:3307
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=inventariotraining
    volumes:
      - mysql-data:/var/lib/mysql
  back-inventario:
    build:
      context: ./
      dockerfile: backinventario.Dockerfile
    ports:
      - 3000:3000
    restart: on-failure
    environment:
      - MONGO_DB_URI=mongodb+srv://admin:admin@inventario.k32rhkn.mongodb.net/
      - RABBITURL=amqp://rabbitmq-inventory:5672
    links:
      - rabbitmq-inventory
    volumes:
      - command-data:/command/app/data
    depends_on:
      - rabbitmq-inventory
  persistence:
    build:
      context: ./
      dockerfile: persistence.Dockerfile
    ports:
      - 3002:3002
    restart: on-failure
    environment:
      - RABBITURL=amqp://rabbitmq-inventory:5672
      - MYSQL_DB_USER=root
      - MYSQL_DB_PASSWORD=1234
      - MYSQL_DB_PORT=3307
      - MYSQL_DB_HOST=mysql-inventory
      - MYSQL_DB_DATABASE=inventariotraining
    links:
      - mysql-inventory
      - rabbitmq-inventory
    volumes:
      - query-data:/query/app/data
    depends_on:
      - rabbitmq-inventory
  soketio:
    build:
      context: ./
      dockerfile: soketIo.Dockerfile
    ports:
      - 3001:3001
      - 81:81
    restart: on-failure
    environment:
      - RABBITURL=amqp://rabbitmq-inventory:5672
    links:
      - rabbitmq-inventory
    volumes:
      - socket-data:/query/app/data
    depends_on:
      - rabbitmq-inventory
volumes:
  command-data:
  query-data:
  socket-data:
  mysql-data:
  rabbitmq-data:
